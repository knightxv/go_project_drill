// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: score/score.proto

package pbScore

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *CommonResp) Reset() {
	*x = CommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_score_score_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResp) ProtoMessage() {}

func (x *CommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_score_score_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResp.ProtoReflect.Descriptor instead.
func (*CommonResp) Descriptor() ([]byte, []int) {
	return file_score_score_proto_rawDescGZIP(), []int{0}
}

func (x *CommonResp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *CommonResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type UserScoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Score  uint64 `protobuf:"varint,2,opt,name=Score,proto3" json:"Score,omitempty"`
}

func (x *UserScoreInfo) Reset() {
	*x = UserScoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_score_score_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserScoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserScoreInfo) ProtoMessage() {}

func (x *UserScoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_score_score_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserScoreInfo.ProtoReflect.Descriptor instead.
func (*UserScoreInfo) Descriptor() ([]byte, []int) {
	return file_score_score_proto_rawDescGZIP(), []int{1}
}

func (x *UserScoreInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserScoreInfo) GetScore() uint64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type UserRewardEventLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	RewardType string `protobuf:"bytes,3,opt,name=RewardType,proto3" json:"RewardType,omitempty"`
	Reward     int64  `protobuf:"varint,4,opt,name=Reward,proto3" json:"Reward,omitempty"`
	Info       string `protobuf:"bytes,5,opt,name=Info,proto3" json:"Info,omitempty"`
	CreateTime int64  `protobuf:"varint,6,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
}

func (x *UserRewardEventLog) Reset() {
	*x = UserRewardEventLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_score_score_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRewardEventLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRewardEventLog) ProtoMessage() {}

func (x *UserRewardEventLog) ProtoReflect() protoreflect.Message {
	mi := &file_score_score_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRewardEventLog.ProtoReflect.Descriptor instead.
func (*UserRewardEventLog) Descriptor() ([]byte, []int) {
	return file_score_score_proto_rawDescGZIP(), []int{2}
}

func (x *UserRewardEventLog) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserRewardEventLog) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserRewardEventLog) GetRewardType() string {
	if x != nil {
		return x.RewardType
	}
	return ""
}

func (x *UserRewardEventLog) GetReward() int64 {
	if x != nil {
		return x.Reward
	}
	return 0
}

func (x *UserRewardEventLog) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *UserRewardEventLog) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type UploadUserRewardEventReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Id          string `protobuf:"bytes,2,opt,name=Id,proto3" json:"Id,omitempty"`
	UserId      string `protobuf:"bytes,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	RewardType  string `protobuf:"bytes,4,opt,name=RewardType,proto3" json:"RewardType,omitempty"`
	Reward      int64  `protobuf:"varint,5,opt,name=Reward,proto3" json:"Reward,omitempty"`
	Info        string `protobuf:"bytes,6,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UploadUserRewardEventReq) Reset() {
	*x = UploadUserRewardEventReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_score_score_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadUserRewardEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadUserRewardEventReq) ProtoMessage() {}

func (x *UploadUserRewardEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_score_score_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadUserRewardEventReq.ProtoReflect.Descriptor instead.
func (*UploadUserRewardEventReq) Descriptor() ([]byte, []int) {
	return file_score_score_proto_rawDescGZIP(), []int{3}
}

func (x *UploadUserRewardEventReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *UploadUserRewardEventReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UploadUserRewardEventReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UploadUserRewardEventReq) GetRewardType() string {
	if x != nil {
		return x.RewardType
	}
	return ""
}

func (x *UploadUserRewardEventReq) GetReward() int64 {
	if x != nil {
		return x.Reward
	}
	return 0
}

func (x *UploadUserRewardEventReq) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type UploadUserRewardEventResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *UploadUserRewardEventResp) Reset() {
	*x = UploadUserRewardEventResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_score_score_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadUserRewardEventResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadUserRewardEventResp) ProtoMessage() {}

func (x *UploadUserRewardEventResp) ProtoReflect() protoreflect.Message {
	mi := &file_score_score_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadUserRewardEventResp.ProtoReflect.Descriptor instead.
func (*UploadUserRewardEventResp) Descriptor() ([]byte, []int) {
	return file_score_score_proto_rawDescGZIP(), []int{4}
}

func (x *UploadUserRewardEventResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetUserScoreInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId      string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *GetUserScoreInfoReq) Reset() {
	*x = GetUserScoreInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_score_score_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserScoreInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserScoreInfoReq) ProtoMessage() {}

func (x *GetUserScoreInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_score_score_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserScoreInfoReq.ProtoReflect.Descriptor instead.
func (*GetUserScoreInfoReq) Descriptor() ([]byte, []int) {
	return file_score_score_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserScoreInfoReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetUserScoreInfoReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserScoreInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp    *CommonResp    `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	UserScoreInfo *UserScoreInfo `protobuf:"bytes,2,opt,name=userScoreInfo,proto3" json:"userScoreInfo,omitempty"`
}

func (x *GetUserScoreInfoResp) Reset() {
	*x = GetUserScoreInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_score_score_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserScoreInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserScoreInfoResp) ProtoMessage() {}

func (x *GetUserScoreInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_score_score_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserScoreInfoResp.ProtoReflect.Descriptor instead.
func (*GetUserScoreInfoResp) Descriptor() ([]byte, []int) {
	return file_score_score_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserScoreInfoResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetUserScoreInfoResp) GetUserScoreInfo() *UserScoreInfo {
	if x != nil {
		return x.UserScoreInfo
	}
	return nil
}

type GetRewardEventLogsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId      string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	RewardType  string `protobuf:"bytes,3,opt,name=RewardType,proto3" json:"RewardType,omitempty"`
	PageIndex   int32  `protobuf:"varint,5,opt,name=PageIndex,proto3" json:"PageIndex,omitempty"`
	PageSize    int32  `protobuf:"varint,6,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *GetRewardEventLogsReq) Reset() {
	*x = GetRewardEventLogsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_score_score_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRewardEventLogsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRewardEventLogsReq) ProtoMessage() {}

func (x *GetRewardEventLogsReq) ProtoReflect() protoreflect.Message {
	mi := &file_score_score_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRewardEventLogsReq.ProtoReflect.Descriptor instead.
func (*GetRewardEventLogsReq) Descriptor() ([]byte, []int) {
	return file_score_score_proto_rawDescGZIP(), []int{7}
}

func (x *GetRewardEventLogsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetRewardEventLogsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetRewardEventLogsReq) GetRewardType() string {
	if x != nil {
		return x.RewardType
	}
	return ""
}

func (x *GetRewardEventLogsReq) GetPageIndex() int32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *GetRewardEventLogsReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetRewardEventLogsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp           `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	EventLogs  []*UserRewardEventLog `protobuf:"bytes,2,rep,name=EventLogs,proto3" json:"EventLogs,omitempty"`
}

func (x *GetRewardEventLogsResp) Reset() {
	*x = GetRewardEventLogsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_score_score_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRewardEventLogsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRewardEventLogsResp) ProtoMessage() {}

func (x *GetRewardEventLogsResp) ProtoReflect() protoreflect.Message {
	mi := &file_score_score_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRewardEventLogsResp.ProtoReflect.Descriptor instead.
func (*GetRewardEventLogsResp) Descriptor() ([]byte, []int) {
	return file_score_score_proto_rawDescGZIP(), []int{8}
}

func (x *GetRewardEventLogsResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetRewardEventLogsResp) GetEventLogs() []*UserRewardEventLog {
	if x != nil {
		return x.EventLogs
	}
	return nil
}

type WithdrawScoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId      string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Score       int64  `protobuf:"varint,3,opt,name=Score,proto3" json:"Score,omitempty"`
	Coin        string `protobuf:"bytes,4,opt,name=Coin,proto3" json:"Coin,omitempty"`
	ChainId     int64  `protobuf:"varint,5,opt,name=ChainId,proto3" json:"ChainId,omitempty"`
}

func (x *WithdrawScoreReq) Reset() {
	*x = WithdrawScoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_score_score_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawScoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawScoreReq) ProtoMessage() {}

func (x *WithdrawScoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_score_score_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawScoreReq.ProtoReflect.Descriptor instead.
func (*WithdrawScoreReq) Descriptor() ([]byte, []int) {
	return file_score_score_proto_rawDescGZIP(), []int{9}
}

func (x *WithdrawScoreReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *WithdrawScoreReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WithdrawScoreReq) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *WithdrawScoreReq) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

func (x *WithdrawScoreReq) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

type WithdrawScoreResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	WithdrawId int64       `protobuf:"varint,2,opt,name=WithdrawId,proto3" json:"WithdrawId,omitempty"`
	TxHash     string      `protobuf:"bytes,3,opt,name=TxHash,proto3" json:"TxHash,omitempty"`
}

func (x *WithdrawScoreResp) Reset() {
	*x = WithdrawScoreResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_score_score_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawScoreResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawScoreResp) ProtoMessage() {}

func (x *WithdrawScoreResp) ProtoReflect() protoreflect.Message {
	mi := &file_score_score_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawScoreResp.ProtoReflect.Descriptor instead.
func (*WithdrawScoreResp) Descriptor() ([]byte, []int) {
	return file_score_score_proto_rawDescGZIP(), []int{10}
}

func (x *WithdrawScoreResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *WithdrawScoreResp) GetWithdrawId() int64 {
	if x != nil {
		return x.WithdrawId
	}
	return 0
}

func (x *WithdrawScoreResp) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

type WithdrawScoreLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Score        int64  `protobuf:"varint,3,opt,name=Score,proto3" json:"Score,omitempty"`
	Amount       int64  `protobuf:"varint,4,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Status       string `protobuf:"bytes,5,opt,name=Status,proto3" json:"Status,omitempty"`
	Remark       string `protobuf:"bytes,6,opt,name=Remark,proto3" json:"Remark,omitempty"`
	Coin         string `protobuf:"bytes,7,opt,name=Coin,proto3" json:"Coin,omitempty"`
	ChainId      int64  `protobuf:"varint,8,opt,name=ChainId,proto3" json:"ChainId,omitempty"`
	TxHash       string `protobuf:"bytes,9,opt,name=TxHash,proto3" json:"TxHash,omitempty"`
	ChainUpLogId string `protobuf:"bytes,10,opt,name=ChainUpLogId,proto3" json:"ChainUpLogId,omitempty"`
	CreateTime   int64  `protobuf:"varint,11,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
}

func (x *WithdrawScoreLog) Reset() {
	*x = WithdrawScoreLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_score_score_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawScoreLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawScoreLog) ProtoMessage() {}

func (x *WithdrawScoreLog) ProtoReflect() protoreflect.Message {
	mi := &file_score_score_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawScoreLog.ProtoReflect.Descriptor instead.
func (*WithdrawScoreLog) Descriptor() ([]byte, []int) {
	return file_score_score_proto_rawDescGZIP(), []int{11}
}

func (x *WithdrawScoreLog) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WithdrawScoreLog) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WithdrawScoreLog) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *WithdrawScoreLog) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *WithdrawScoreLog) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *WithdrawScoreLog) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *WithdrawScoreLog) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

func (x *WithdrawScoreLog) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *WithdrawScoreLog) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *WithdrawScoreLog) GetChainUpLogId() string {
	if x != nil {
		return x.ChainUpLogId
	}
	return ""
}

func (x *WithdrawScoreLog) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type GetWithdrawScoreLogsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId      string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	PageIndex   int32  `protobuf:"varint,5,opt,name=PageIndex,proto3" json:"PageIndex,omitempty"`
	PageSize    int32  `protobuf:"varint,6,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *GetWithdrawScoreLogsReq) Reset() {
	*x = GetWithdrawScoreLogsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_score_score_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawScoreLogsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawScoreLogsReq) ProtoMessage() {}

func (x *GetWithdrawScoreLogsReq) ProtoReflect() protoreflect.Message {
	mi := &file_score_score_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawScoreLogsReq.ProtoReflect.Descriptor instead.
func (*GetWithdrawScoreLogsReq) Descriptor() ([]byte, []int) {
	return file_score_score_proto_rawDescGZIP(), []int{12}
}

func (x *GetWithdrawScoreLogsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetWithdrawScoreLogsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetWithdrawScoreLogsReq) GetPageIndex() int32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *GetWithdrawScoreLogsReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetWithdrawScoreLogsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp         `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	EventLogs  []*WithdrawScoreLog `protobuf:"bytes,2,rep,name=EventLogs,proto3" json:"EventLogs,omitempty"`
}

func (x *GetWithdrawScoreLogsResp) Reset() {
	*x = GetWithdrawScoreLogsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_score_score_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawScoreLogsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawScoreLogsResp) ProtoMessage() {}

func (x *GetWithdrawScoreLogsResp) ProtoReflect() protoreflect.Message {
	mi := &file_score_score_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawScoreLogsResp.ProtoReflect.Descriptor instead.
func (*GetWithdrawScoreLogsResp) Descriptor() ([]byte, []int) {
	return file_score_score_proto_rawDescGZIP(), []int{13}
}

func (x *GetWithdrawScoreLogsResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetWithdrawScoreLogsResp) GetEventLogs() []*WithdrawScoreLog {
	if x != nil {
		return x.EventLogs
	}
	return nil
}

var File_score_score_proto protoreflect.FileDescriptor

var file_score_score_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x3e, 0x0a, 0x0a, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x3d, 0x0a, 0x0d, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x12, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4e, 0x0a, 0x19, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x20,
	0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x31, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xab, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x84,
	0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x09,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x09, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4c, 0x6f, 0x67, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x10, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f,
	0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x11, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a,
	0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x1e, 0x0a, 0x0a, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0xa2, 0x02, 0x0a, 0x10, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x55, 0x70, 0x4c, 0x6f, 0x67, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x55, 0x70, 0x4c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8d, 0x01,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x84, 0x01,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x0a, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a,
	0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4c, 0x6f, 0x67, 0x73, 0x32, 0xa7, 0x03, 0x0a, 0x0c, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x15, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1f,
	0x2e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x20, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4c, 0x6f, 0x67, 0x73, 0x12, 0x1c, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x42, 0x0a, 0x0d, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x1e, 0x2e,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x42, 0x10,
	0x5a, 0x0e, 0x2f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x3b, 0x70, 0x62, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_score_score_proto_rawDescOnce sync.Once
	file_score_score_proto_rawDescData = file_score_score_proto_rawDesc
)

func file_score_score_proto_rawDescGZIP() []byte {
	file_score_score_proto_rawDescOnce.Do(func() {
		file_score_score_proto_rawDescData = protoimpl.X.CompressGZIP(file_score_score_proto_rawDescData)
	})
	return file_score_score_proto_rawDescData
}

var file_score_score_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_score_score_proto_goTypes = []interface{}{
	(*CommonResp)(nil),                // 0: score.CommonResp
	(*UserScoreInfo)(nil),             // 1: score.UserScoreInfo
	(*UserRewardEventLog)(nil),        // 2: score.UserRewardEventLog
	(*UploadUserRewardEventReq)(nil),  // 3: score.UploadUserRewardEventReq
	(*UploadUserRewardEventResp)(nil), // 4: score.UploadUserRewardEventResp
	(*GetUserScoreInfoReq)(nil),       // 5: score.GetUserScoreInfoReq
	(*GetUserScoreInfoResp)(nil),      // 6: score.GetUserScoreInfoResp
	(*GetRewardEventLogsReq)(nil),     // 7: score.GetRewardEventLogsReq
	(*GetRewardEventLogsResp)(nil),    // 8: score.GetRewardEventLogsResp
	(*WithdrawScoreReq)(nil),          // 9: score.WithdrawScoreReq
	(*WithdrawScoreResp)(nil),         // 10: score.WithdrawScoreResp
	(*WithdrawScoreLog)(nil),          // 11: score.WithdrawScoreLog
	(*GetWithdrawScoreLogsReq)(nil),   // 12: score.GetWithdrawScoreLogsReq
	(*GetWithdrawScoreLogsResp)(nil),  // 13: score.GetWithdrawScoreLogsResp
}
var file_score_score_proto_depIdxs = []int32{
	0,  // 0: score.UploadUserRewardEventResp.CommonResp:type_name -> score.CommonResp
	0,  // 1: score.GetUserScoreInfoResp.CommonResp:type_name -> score.CommonResp
	1,  // 2: score.GetUserScoreInfoResp.userScoreInfo:type_name -> score.UserScoreInfo
	0,  // 3: score.GetRewardEventLogsResp.CommonResp:type_name -> score.CommonResp
	2,  // 4: score.GetRewardEventLogsResp.EventLogs:type_name -> score.UserRewardEventLog
	0,  // 5: score.WithdrawScoreResp.CommonResp:type_name -> score.CommonResp
	0,  // 6: score.GetWithdrawScoreLogsResp.CommonResp:type_name -> score.CommonResp
	11, // 7: score.GetWithdrawScoreLogsResp.EventLogs:type_name -> score.WithdrawScoreLog
	3,  // 8: score.scoreService.UploadUserRewardEvent:input_type -> score.UploadUserRewardEventReq
	5,  // 9: score.scoreService.GetUserScoreInfo:input_type -> score.GetUserScoreInfoReq
	7,  // 10: score.scoreService.GetRewardEventLogs:input_type -> score.GetRewardEventLogsReq
	9,  // 11: score.scoreService.WithdrawScore:input_type -> score.WithdrawScoreReq
	12, // 12: score.scoreService.GetWithdrawScoreLogs:input_type -> score.GetWithdrawScoreLogsReq
	4,  // 13: score.scoreService.UploadUserRewardEvent:output_type -> score.UploadUserRewardEventResp
	6,  // 14: score.scoreService.GetUserScoreInfo:output_type -> score.GetUserScoreInfoResp
	8,  // 15: score.scoreService.GetRewardEventLogs:output_type -> score.GetRewardEventLogsResp
	10, // 16: score.scoreService.WithdrawScore:output_type -> score.WithdrawScoreResp
	13, // 17: score.scoreService.GetWithdrawScoreLogs:output_type -> score.GetWithdrawScoreLogsResp
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_score_score_proto_init() }
func file_score_score_proto_init() {
	if File_score_score_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_score_score_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_score_score_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserScoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_score_score_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRewardEventLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_score_score_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadUserRewardEventReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_score_score_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadUserRewardEventResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_score_score_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserScoreInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_score_score_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserScoreInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_score_score_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRewardEventLogsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_score_score_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRewardEventLogsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_score_score_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawScoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_score_score_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawScoreResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_score_score_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawScoreLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_score_score_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawScoreLogsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_score_score_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawScoreLogsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_score_score_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_score_score_proto_goTypes,
		DependencyIndexes: file_score_score_proto_depIdxs,
		MessageInfos:      file_score_score_proto_msgTypes,
	}.Build()
	File_score_score_proto = out.File
	file_score_score_proto_rawDesc = nil
	file_score_score_proto_goTypes = nil
	file_score_score_proto_depIdxs = nil
}
